@inproceedings{nuz3,
    title = {$\nu$Z - An Optimizing SMT Solver},
    author = {Nikolaj S. Bj{\o}rner and Anh-Dung Phan and Lars Fleckenstein},
    booktitle = {International Conference on Tools and Algorithms for Construction and Analysis of Systems},
    year = {2015},
    url = {https://api.semanticscholar.org/CorpusID:17542710}
}

@inproceedings{kovasznai,
    author={Kovásznai, Gergely and Gajdár, Krisztián and Kovács, Laura},
    booktitle={2019 21st International Symposium on Symbolic and Numeric Algorithms for Scientific Computing (SYNASC)},
    title={Portfolio SAT and SMT Solving of Cardinality Constraints in Sensor Network Optimization},
    year={2019},
    volume={},
    number={},
    pages={85-91},
    keywords={SAT;SMT;OMT;WSN;sensor network;optimization;portfolio;cardinality constraint},
    doi={10.1109/SYNASC49474.2019.00021}
}

@inproceedings{suelflow,
    author={Sülflow, Andre and Wille, Robert and Fey, Görschwin and Drechsler, Rolf},
    booktitle={2009 39th International Symposium on Multiple-Valued Logic},
    title={Evaluation of Cardinality Constraints on SMT-Based Debugging},
    year={2009},
    volume={},
    number={},
    pages={298-303},
    keywords={Debugging;Encoding;Surface-mount technology;Hardware;Arithmetic;Constraint theory;Formal verification;Adders;Runtime;Circuits;Satisfiable Modulo Theory (SMT);cardinality constraint;debugging},
    doi={10.1109/ISMVL.2009.28}
}

@book{kastens,
    author = {Kastens, Uwe and Büning, Hans Kleine},
    title = {Modellierung},
    publisher = {Carl Hanser Verlag GmbH \&amp; Co. KG},
    year = {2008},
    doi = {10.3139/9783446417212},
    address = {München},
    edition   = {2., überarbeitete und erweiterte Auflage},
    URL = {https://www.hanser-elibrary.com/doi/abs/10.3139/9783446417212},
    eprint = {https://www.hanser-elibrary.com/doi/pdf/10.3139/9783446417212}
}

@online{hasmtlib,
    author = {Julian Bruder},
    title = {hasmtlib: A monad for interfacing with external SMT solvers},
    year = {2024},
    url = {https://hackage.haskell.org/package/hasmtlib},
    version = {2.3.2},
    note = {Abgerufen am: 20.08.2024}
}

@techreport{smtlib,
    author = {Clark Barrett and Parcal Fontaine and Cesare Tinelli},
    date-added = {2017-07-18},
    institution = {Department of Computer Science, The University of Iowa},
    url = {https://smt-lib.org/papers/smt-lib-reference-v2.6-r2017-07-18.pdf},
    title = {{The SMT-LIB Standard Version 2.6}},
    Year = {2017},
    note = {Abgerufen am: 21.08.2024}
}

@inproceedings{gadts,
    author = {{Peyton Jones}, Simon and Vytiniotis, Dimitrios and Weirich, Stephanie and Washburn, Geoffrey},
    title = {Simple Unification-based Type Inference for {GADTs}},
    booktitle = {International Conference on Functional Programming (ICFP)},
    doi = {10.1145/1159803.1159811},
    publisher = {ACM},
    year = {2006},
}

@article{industry4dot0,
    title = {Industry 4.0 – A Glimpse},
    journal = {Procedia Manufacturing},
    volume = {20},
    pages = {233-238},
    year = {2018},
    note = {2nd International Conference on Materials, Manufacturing and Design Engineering (iCMMD2017), 11-12 December 2017, MIT Aurangabad, Maharashtra, INDIA},
    issn = {2351-9789},
    doi = {https://doi.org/10.1016/j.promfg.2018.02.034},
    url = {https://www.sciencedirect.com/science/article/pii/S2351978918300672},
    author = {Saurabh Vaidya and Prashant Ambad and Santosh Bhosle},
    keywords = {Industry 4.0, Internet of Things, Cyber Physical System, Smart Manufacturing, Cloud based Manufacturing},
}

@Inbook{smt,
    author="Barrett, Clark and Tinelli, Cesare",
    editor="Clarke, Edmund M. and Henzinger, Thomas A. and Veith, Helmut and Bloem, Roderick",
    title="Satisfiability Modulo Theories",
    bookTitle="Handbook of Model Checking",
    year="2018",
    publisher="Springer International Publishing",
    address="Cham",
    pages="305--343",
    isbn="978-3-319-10575-8",
    doi="10.1007/978-3-319-10575-8_11",
    url="https://doi.org/10.1007/978-3-319-10575-8_11"
}

@inproceedings{haskellhistory,
    author = {Hudak, Paul and Hughes, John and Peyton Jones, Simon and Wadler, Philip},
    year = {2007},
    month = {06},
    pages = {1-55},
    title = {A history of Haskell: Being lazy with class},
    journal = {Proceedings - Third ACM SIGPLAN History of Programming Languages Conference, HOPL-III},
    doi = {10.1145/1238844.1238856}
}

@inproceedings{z3,
    author = {De Moura, Leonardo and Bj\o{}rner, Nikolaj},
    title = {Z3: an efficient SMT solver},
    year = {2008},
    isbn = {3540787992},
    publisher = {Springer-Verlag},
    address = {Berlin, Heidelberg},
    booktitle = {Proceedings of the Theory and Practice of Software, 14th International Conference on Tools and Algorithms for the Construction and Analysis of Systems},
    pages = {337–340},
    numpages = {4},
    location = {Budapest, Hungary},
    series = {TACAS'08/ETAPS'08}
}

@incollection{z3Cardinality,
    author = {Nikolaj Bjørner and Leonardo de Moura and Lev Nachmanson and Christoph M Wintersteiger},
    title = {Programming Z3},
    publisher = {Springer Nature},
    year = {2019},
    pages = {148--201},
    month = {apr}
}

@InProceedings{cvc5,
    author="Barbosa, Haniel and Barrett, Clark and Brain, Martin and Kremer, Gereon and Lachnitt, Hanna and Mann, Makai and Mohamed, Abdalrhman and Mohamed, Mudathir and Niemetz, Aina and N{\"o}tzli, Andres and Ozdemir, Alex and Preiner, Mathias and Reynolds, Andrew and Sheng, Ying and Tinelli, Cesare and Zohar, Yoni",
    editor="Fisman, Dana and Rosu, Grigore",
    title="cvc5: A Versatile and Industrial-Strength SMT Solver",
    booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
    year="2022",
    publisher="Springer International Publishing",
    address="Cham",
    pages="415--442",
    isbn="978-3-030-99524-9"
}

@InProceedings{yices,
    author="Dutertre, Bruno",
    editor="Biere, Armin and Bloem, Roderick",
    title="Yices 2.2",
    booktitle="Computer Aided Verification",
    year="2014",
    publisher="Springer International Publishing",
    address="Cham",
    pages="737--744",
    isbn="978-3-319-08867-9"
}

@InProceedings{opensmt,
    author="Bruttomesso, Roberto and Pek, Edgar and Sharygina, Natasha and Tsitovich, Aliaksei",
    editor="Esparza, Javier and Majumdar, Rupak",
    title="The OpenSMT Solver",
    booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
    year="2010",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="150--153",
    isbn="978-3-642-12002-2"
}

@InProceedings{smtcomp,
    author="Barrett, Clark and de Moura, Leonardo and Stump, Aaron",
    editor="Etessami, Kousha and Rajamani, Sriram K.",
    title="SMT-COMP: Satisfiability Modulo Theories Competition",
    booktitle="Computer Aided Verification",
    year="2005",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="20--23",
    isbn="978-3-540-31686-2"
}

@online{smtcomp2024results,
    author = "Bromberger, Martin and Bobot, François and Jonáš, Martin",
    title = {SMT-COMP 2024 Results},
    year = {2024},
    url = {https://smt-comp.github.io/2024/results/},
    note = {Abgerufen am: 18.09.2024}
}

@InProceedings{eDSL,
    author="Seefried, Sean and Chakravarty, Manuel and Keller, Gabriele",
    editor="Karsai, Gabor and Visser, Eelco",
    title="Optimising Embedded DSLs Using Template Haskell",
    booktitle="Generative Programming and Component Engineering",
    year="2004",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="186--205",
    isbn="978-3-540-30175-2"
}

@article{eDSL2,
    author = {Gill, Andy},
    title = {Domain-specific Languages and Code Synthesis Using Haskell: Looking at embedded DSLs},
    year = {2014},
    issue_date = {April 2014},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {12},
    number = {4},
    issn = {1542-7730},
    url = {https://doi.org/10.1145/2611429.2617811},
    doi = {10.1145/2611429.2617811},
    journal = {Queue},
    month = {apr},
    pages = {30–43},
    numpages = {14}
}

@online{hasmtlibExpr,
    author = {Julian Bruder},
    title = {hasmtlib: A monad for interfacing with external SMT solvers},
    year = {2024},
    url = {https://hackage.haskell.org/package/hasmtlib-2.7.0/docs/src/Language.Hasmtlib.Type.Expr.html#Expr},
    version = {2.7.0},
    note = {Abgerufen am: 06.10.2024}
}

@online{hasmtlibSSMTSort,
    author = {Julian Bruder},
    title = {hasmtlib: A monad for interfacing with external SMT solvers},
    year = {2024},
    url = {https://hackage.haskell.org/package/hasmtlib-2.7.0/docs/src/Language.Hasmtlib.Type.SMTSort.html#SSMTSort},
    version = {2.7.0},
    note = {Abgerufen am: 06.10.2024}
}

@online{hasmtlibKnownSMTSort,
    author = {Julian Bruder},
    title = {hasmtlib: A monad for interfacing with external SMT solvers},
    year = {2024},
    url = {https://hackage.haskell.org/package/hasmtlib-2.7.0/docs/src/Language.Hasmtlib.Type.SMTSort.html#KnownSMTSort},
    version = {2.7.0},
    note = {Abgerufen am: 06.10.2024}
}

@online{hasmtlibCardinality,
    author = {Julian Bruder},
    title = {hasmtlib: A monad for interfacing with external SMT solvers},
    year = {2024},
    url = {https://hackage.haskell.org/package/hasmtlib-2.7.1/docs/src/Language.Hasmtlib.Counting.html},
    version = {2.7.1},
    note = {Abgerufen am: 06.10.2024}
}

@online{hasmtlibIncrementalRefinement,
    author = {Julian Bruder},
    title = {hasmtlib: A monad for interfacing with external SMT solvers},
    year = {2024},
    url = {https://hackage.haskell.org/package/hasmtlib-2.7.1/docs/src/Language.Hasmtlib.Type.Solver.html#solveOptimized},
    version = {2.7.1},
    note = {Abgerufen am: 06.10.2024}
}

@inproceedings{singletons,
    author = {Eisenberg, Richard A. and Weirich, Stephanie},
    title = {Dependently typed programming with singletons},
    year = {2012},
    isbn = {9781450315746},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/2364506.2364522},
    doi = {10.1145/2364506.2364522},
    booktitle = {Proceedings of the 2012 Haskell Symposium},
    pages = {117–130},
    numpages = {14},
    keywords = {singletons, haskell, gadts, dependently typed programming},
    location = {Copenhagen, Denmark},
    series = {Haskell '12}
}

@article{idris,
    author = {BRADY, EDWIN},
    year = {2013},
    month = {09},
    pages = {},
    title = {Idris, a general-purpose dependently typed programming language: Design and implementation},
    volume = {23},
    journal = {Journal of Functional Programming},
    doi = {10.1017/S095679681300018X}
}

@inproceedings{agda,
    author = {Norell, Ulf},
    year = {2009},
    month = {01},
    pages = {1-2},
    title = {Dependently Typed Programming in Agda},
    isbn = {978-3-642-04651-3},
    journal = {TLDI 2009},
    doi = {10.1007/978-3-642-04652-0_5}
}

@inproceedings{rcpsp,
    author = {Ansótegui, Carlos and Bofill, Miquel and Palah'i, Miquel and Suy, Josep and Villaret, Mateu},
    year = {2011},
    month = {01},
    pages = {2-9},
    title = {Satisfiability Modulo Theories: An Efficient Approach for the Resource-Constrained Project Scheduling Problem},
    isbn = {9781577355434},
    journal = {SARA 2011 - Proceedings of the 9th Symposium on Abstraction, Reformulation, and Approximation}
}

@INPROCEEDINGS{rcpspnp,
    author = {Dridi, Olfa and Krichen, Saoussen and Guitouni, Adel},
    booktitle = {2013 5th International Conference on Modeling, Simulation and Applied Optimization (ICMSAO)},
    title = {Solving resource-constrained project scheduling problem by a genetic local search approach},
    year = {2013},
    volume = {},
    number = {},
    pages = {1-5},
    keywords = {Genetic algorithms;Processor scheduling;Sociology;Statistics;Scheduling;Europe;Genetics;Evolutionary algorithms;Multi-criteria genetic algorithm;Maritime surveillance missions},
    doi = {10.1109/ICMSAO.2013.6552544} }


@article{smartnocs,
    author = {Lee, Daeyeal and Lin, Bill and Cheng, Chung-Kuan},
    title = {SMT-Based Contention-Free Task Mapping and Scheduling on 2D/3D SMART NoC with Mixed Dimension-Order Routing},
    year = {2021},
    issue_date = {March 2022},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {19},
    number = {1},
    issn = {1544-3566},
    url = {https://doi.org/10.1145/3487018},
    doi = {10.1145/3487018},
    abstract = {SMART NoCs achieve ultra-low latency by enabling single-cycle multiple-hop transmission via bypass channels. However, contention along bypass channels can seriously degrade the performance of SMART NoCs by breaking the bypass paths. Therefore, contention-free task mapping and scheduling are essential for optimal system performance. In this article, we propose an SMT (Satisfiability Modulo Theories)-based framework to find optimal contention-free task mappings with minimum application schedule lengths on 2D/3D SMART NoCs with mixed dimension-order routing. On top of SMT’s fast reasoning capability for conditional constraints, we develop efficient search-space reduction techniques to achieve practical scalability. Experiments demonstrate that our SMT framework achieves 10\texttimes{} higher scalability than ILP (Integer Linear Programming) with 931.1\texttimes{} (ranges from 2.2\texttimes{} to 1532.1\texttimes{}) and 1237.1\texttimes{} (ranges from 4\texttimes{} to 4373.8\texttimes{}) faster average runtimes for finding optimum solutions on 2D and 3D SMART NoCs and our 2D and 3D extensions of the SMT framework with mixed dimension-order routing also maintain the improved scalability with the extended and diversified routing paths, resulting in reduced application schedule lengths throughout various application benchmarks.},
    journal = {ACM Trans. Archit. Code Optim.},
    month = {dec},
    articleno = {5},
    numpages = {21},
    keywords = {scheduling, task mapping, SMART NoC, SMT}
}

@inproceedings{amoChen,
    title={A New SAT Encoding of the At-Most-One Constraint},
    author={Jingchao Chen},
    year={2010},
    url={https://api.semanticscholar.org/CorpusID:15322159}
}

@article{lowerBoundAMO,
    title = {A lower bound on CNF encodings of the at-most-one constraint},
    journal = {Theoretical Computer Science},
    volume = {762},
    pages = {51-73},
    year = {2019},
    issn = {0304-3975},
    doi = {https://doi.org/10.1016/j.tcs.2018.09.003},
    url = {https://www.sciencedirect.com/science/article/pii/S0304397518305681},
    author = {Petr Kučera and Petr Savický and Vojtěch Vorel},
    keywords = {Knowledge compilation, Cardinality constraint, At most one constraint, Propagation complete encoding},
    abstract = {Constraint “at most one” is a basic cardinality constraint which requires that at most one of its n boolean inputs is set to 1. This constraint is widely used when translating a problem into a conjunctive normal form (CNF) and we investigate its CNF encodings suitable for this purpose. An encoding differs from a CNF representation of a function in that it can use auxiliary variables. We are especially interested in propagation complete encodings which have the property that unit propagation is strong enough to enforce consistency on input variables. We show a lower bound on the number of clauses in any propagation complete encoding of the “at most one” constraint. The lower bound almost matches the size of the best known encodings. We also study an important case of 2-CNF encodings where we show a slightly better lower bound. The lower bound holds also for a related “exactly one” constraint.}
}

@online{cassava,
    author = {Johan Tibell},
    title = {cassava: A CSV parsing and encoding library},
    year = {2024},
    url = {https://hackage.haskell.org/package/cassava},
    version = {0.5.3.2},
    note = {Abgerufen am: 16.09.2024}
}

@online{lenses,
    author = {Edward A. Kmett},
    title = {lens: Lenses, Folds and Traversals},
    year = {2024},
    url = {https://hackage.haskell.org/package/lens},
    version = {5.3.2},
    note = {Abgerufen am: 16.09.2024}
}

@inproceedings{smtquantifiersarehard,
    author = {Ge, Yeting and Barrett, Clark and Tinelli, Cesare},
    year = {2007},
    month = {04},
    pages = {167-182},
    title = {Solving Quantified Verification Conditions Using Satisfiability Modulo Theories},
    isbn = {978-3-540-73594-6},
    doi = {10.1007/978-3-540-73595-3_12}
}

@InProceedings{smtquantifiersarehard2,
    author="Ge, Yeting and de Moura, Leonardo",
    editor="Bouajjani, Ahmed and Maler, Oded",
    title="Complete Instantiation for Quantified Formulas in Satisfiabiliby Modulo Theories",
    booktitle="Computer Aided Verification",
    year="2009",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="306--320",
    abstract="Quantifier reasoning in Satisfiability Modulo Theories (SMT) is a long-standing challenge. The practical method employed in modern SMT solvers is to instantiate quantified formulas based on heuristics, which is not refutationally complete even for pure first-order logic. We present several decidable fragments of first order logic modulo theories. We show how to construct models for satisfiable formulas in these fragments. For richer undecidable fragments, we discuss conditions under which our procedure is refutationally complete. We also describe useful heuristics based on model checking for prioritizing or avoiding instantiations.",
    isbn="978-3-642-02658-4"
}

@InProceedings{omt,
    author="Tsiskaridze, Nestan
and Barrett, Clark
and Tinelli, Cesare",
    editor="Benzm{\"u}ller, Christoph
and Heule, Marijn J.H.
and Schmidt, Renate A.",
    title="Generalized Optimization Modulo Theories",
    booktitle="Automated Reasoning",
    year="2024",
    publisher="Springer Nature Switzerland",
    address="Cham",
    pages="458--479",
    abstract="Optimization Modulo Theories (OMT) has emerged as an important extension of the highly successful Satisfiability Modulo Theories (SMT) paradigm. The OMT problem requires solving an SMT problem with the restriction that the solution must be optimal with respect to a given objective function. We introduce a generalization of the OMT problem where, in particular, objective functions can range over partially ordered sets. We provide a formalization of and an abstract calculus for the Generalized OMT problem and prove their key correctness properties. Generalized OMT extends previous work on OMT in several ways. First, in contrast to many current OMT solvers, our calculus is theory-agnostic, enabling the optimization of queries over any theories or combinations thereof. Second, our formalization unifies both single- and multi-objective optimization problems, allowing us to study them both in a single framework and facilitating the use of objective functions that are not supported by existing OMT approaches. Finally, our calculus is sufficiently general to fully capture a wide variety of current OMT approaches (each of which can be realized as a specific strategy for rule application in the calculus) and to support the exploration of new search strategies. Much like the original abstract DPLL(T) calculus for SMT, our Generalized OMT calculus is designed to establish a theoretical foundation for understanding and research and to serve as a framework for studying variations of and extensions to existing OMT methodologies.",
    isbn="978-3-031-63498-7"
}

@InProceedings{incremental,
    author="Liu, Tianhai
and Ara{\'u}jo, Mateus
and d'Amorim, Marcelo
and Taghdiri, Mana",
    editor="Yahav, Eran",
    title="A Comparative Study of Incremental Constraint Solving Approaches in Symbolic Execution",
    booktitle="Hardware and Software: Verification and Testing",
    year="2014",
    publisher="Springer International Publishing",
    address="Cham",
    pages="284--299",
    abstract="Constraint solving is a major source of cost in Symbolic Execution (SE). This paper presents a study to assess the importance of some sensible options for solving constraints in SE. The main observation is that stack-based approaches to incremental solving is often much faster compared to cache-based approaches, which are more popular. Considering all 96 C programs from the KLEE benchmark that we analyzed, the median speedup obtained with a (non-optimized) stack-based approach was of 5x. Results suggest that tools should take advantage of incremental solving support from modern SMT solvers and researchers should look for ways to combine stack- and cache-based approaches to reduce execution cost even further. Instructions to reproduce results are available online: http://asa.iti.kit.edu/130{\_}392.php",
    isbn="978-3-319-13338-6"
}

@InProceedings{bitblasting,
    author="Niemetz, Aina and Preiner, Mathias and Zohar, Yoni",
    editor="Gurfinkel, Arie and Ganesh, Vijay",
    title="Scalable Bit-Blasting with Abstractions",
    booktitle="Computer Aided Verification",
    year="2024",
    publisher="Springer Nature Switzerland",
    address="Cham",
    pages="178--200",
    abstract="The dominant state-of-the-art approach for solving bit-vector formulas in Satisfiability Modulo Theories (SMT) is bit-blasting, an eager reduction to propositional logic. Bit-blasting is surprisingly efficient in practice but does not generally scale well with increasing bit-widths, especially when bit-vector arithmetic is present. In this paper, we present a novel CEGAR-style abstraction-refinement procedure for the theory of fixed-size bit-vectors that significantly improves the scalability of bit-blasting. We provide lemma schemes for various arithmetic bit-vector operators and an abduction-based framework for synthesizing refinement lemmas. We extended the state-of-the-art SMT solver Bitwuzla with our abstraction-refinement approach and show that it significantly improves solver performance on a variety of benchmark sets, including industrial benchmarks that arise from smart contract verification.",
    isbn="978-3-031-65627-9"
}

@InProceedings{preprocessing,
    author="Bj{\o}rner, Nikolaj and Fazekas, Katalin",
    editor="Pientka, Brigitte and Tinelli, Cesare",
    title="On Incremental Pre-processing for SMT",
    booktitle="Automated Deduction -- CADE 29",
    year="2023",
    publisher="Springer Nature Switzerland",
    address="Cham",
    pages="41--60",
    abstract="We introduce a calculus for incremental pre-processing for SMT and instantiate it in the context of z3. It identifies when powerful formula simplifications can be retained when adding new constraints. Use cases that could not be solved in incremental mode can now be solved incrementally thanks to the availability of pre-processing. Our approach admits a class of transformations that preserve satisfiability, but not equivalence. We establish a taxonomy of pre-processing techniques that distinguishes cases where new constraints are modified or constraints previously added have to be replayed. We then justify the soundness of the proposed incremental pre-processing calculus.",
    isbn="978-3-031-38499-8"
}

@article{discriminationPaper,
    author = {Henglein, Fritz},
    title = {Generic discrimination: sorting and paritioning unshared data in linear time},
    year = {2008},
    issue_date = {September 2008},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {43},
    number = {9},
    issn = {0362-1340},
    url = {https://doi.org/10.1145/1411203.1411220},
    doi = {10.1145/1411203.1411220},
    abstract = {We introduce the notion of discrimination as a generalization of both sorting and partitioning and show that worst-case linear-time discrimination functions (discriminators) can be defined generically, by (co-)induction on an expressive language of order denotations. The generic definition yields discriminators that generalize both distributive sorting and multiset discrimination. The generic discriminator can be coded compactly using list comprehensions, with order denotations specified using Generalized Algebraic Data Types (GADTs). A GADT-free combinator formulation of discriminators is also given.We give some examples of the uses of discriminators, including a new most-significant-digit lexicographic sorting algorithm.Discriminators generalize binary comparison functions: They operate on n arguments at a time, but do not expose more information than the underlying equivalence, respectively ordering relation on the arguments. We argue that primitive types with equality (such as references in ML) and ordered types (such as the machine integer type), should expose their equality, respectively standard ordering relation, as discriminators: Having only a binary equality test on a type requires Θ(n2) time to find all the occurrences of an element in a list of length n, for each element in the list, even if the equality test takes only constant time. A discriminator accomplishes this in linear time. Likewise, having only a (constant-time) comparison function requires Θ(n log n) time to sort a list of n elements. A discriminator can do this in linear time.},
    journal = {SIGPLAN Not.},
    month = sep,
    pages = {91–102},
    numpages = {12},
    keywords = {total preorder, sorting, partitioning, order, multiset discrimination, generic, functional, equivalence, discriminator, discrimination}
}

@online{discriminationHaskell,
    author = {Eward A. Kmett},
    title = {discrimination: Fast generic linear-time sorting, joins and container construction.},
    year = {2022},
    url = {https://hackage.haskell.org/package/discrimination},
    version = {0.5},
    note = {Abgerufen am: 27.09.2024}
}

@article{haskell2010report,
    title={Haskell 2010 language report},
    author={Marlow, Simon and others},
    year={2010},
    url = {https://www.haskell.org/definition/haskell2010.pdf},
    note = {Abgerufen am: 06.10.2024}
}